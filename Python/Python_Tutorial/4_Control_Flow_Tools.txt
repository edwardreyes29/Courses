A. if Statements

if condition:
    statements
elif condition:
    statements
else
    statements

B. for Statements

    Pythons for statement iterates over items of any sequence (list | string)
    in order that they appear.

        words = ['cat', 'window', 'defestrate']
        for w in words:
            print(w, len(w))

    # C-Sharp   
        foreach (w in words) 
        {
            Console.WriteLine($"{w} {words.Length});
        }
    Modifying a collections is tricky. Loop over copy of collection 
    or create a new one:

        # Strategy: Iterate over a copy
        for user, status in users.copy().items():
            if status == 'inactive':
                del users[user]

        # Strategy: Create a new collection
        active_users = {}
        for user, status in users.items():
            if status == 'active':
                active_users[user] = status
C. range()
    ###
        >>> for i in range(5):
        ...     print(i)
        ... 
        0
        1
        2
        3
        4
        >>> for i in range(1,11):
        ...     print(i)
        ... 
        1
        2
        3
        4
        5
        6
        7
        8
        9
        10
        >>> for i in range(0,20,2): # third arg is increment value (step)
        ...     print(i)
        ... 
        0
        2
        4
        6
        8
        10
        12
        14
        16
        18
    ###

    Iterate over a sequence, combine range() and len():
    a = ['Mary', 'had', 'a', 'little', 'lamb']
    for i in range(len(a)):
        print(i, a[i])

    user enumerate() -> looping techniques
    
    get a list from a range:
        list(range(4))
        [0,1,2,3]

D. (4.4) break and continue and else Clauses on Loops
