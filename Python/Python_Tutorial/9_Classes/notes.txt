II. Scopes and Namespaces

    Namespace: mapping from names to objects.
    - namespaces are currently implemented as Python Dictionaries.
    - e.g. global names in a module, local names in a function invocation.

        Set of attributes of an object also form a namespace.


        z.real -> real is an attribute of object z.

        modname.funcname -> mapping between module's attributes and global names -> share the same namespace!
        
        Writable:
            modname.the_answer = 42

            del modname.the_answer # remove attribute the_answer from object named modname.

II. Scopes and Namespaces Example

III. Classes

    Syntax:
        class ClassName:
            <statement-1>
            ...
            <statement-N>

    instantiation operation (caling class object) creates an empty object.
    __init__() 

        def __init__(self):
            self.data = []

    * class instantiation automatically invokes __init__()