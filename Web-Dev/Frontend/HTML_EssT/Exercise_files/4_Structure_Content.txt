I. The value structure

  Semantics:
    How to structure documents that illustrate the meaning of the contents

    Assistive technology & search engines doesn't care about website visual layout.
      - Structure of the page has to convey structure of the content (hierarchy)

    Sectioning elements:
      <h1>...<h6>
      <article>
      <aside>
      <nav>
      <section>

    Semantic Elements:
      <header>
      <main>
      <footer>

II. Controlling document outlines
  What type of document outline you want to generate.
  Use semantic elements to describe the outline of the web page.

  current outline:
  1. Untitled Section

  After adding a <h1>:
  1. My Big Blog

  After adding more heading levels:
  1. My Big Blog
    1. Things I like
      1. My favorite books
        1. Fiction
        2. Non-fiction


  End result after adding proper headings:
    1. My Big Blog
      1. Things I like
        1. My favorite books
            1. Fiction
            2. Non-fiction
        2. My favorite movies and shows
            1. Movies
            2. TV Shows
        3. My favorite music
            1. Jazz
            2. Rock
            3. Americana
        4. Spotlight favorite

        HTML -> semantic sectioning to make outlines more meaningful.

    <nav> -> creates new section that is specific to navifation to this site.
    <article>
    <section> -> sections for different category, music, books, etc..
    <aside> -> tells site that this part is not critical but related to other sections.

    1. My Big Blog
      1. Untitled Section (or NAV)
      2. Things I like
        1. My favorite books
            1. Fiction
            2. Non-fiction
        2. My favorite movies and shows
            1. Movies
            2. TV Shows
        3. My favorite music
            1. Jazz
            2. Rock
            3. Americana
        4. Spotlight favorite

III. The nav element
  <nav> contains main navigation functionality for the page.
  W3C: <nav> element represents a seciton of page that links to other pages
      or to other parts within the page: a section with navigation links.

      footer can have links, but using a <footer> is enough


    Ex. Adding nav to links to other web-pages.

    <nav>
      <ul>
        <li><a href="intro.htm" title="Introduction to HTML">Introduction to HTML</a></li>
        <li><a href="syntax.htm" title="HTML syntax">HTML syntax</a></li>
        <li><a href="structure.htm" title="Structuring pages">Structuring pages</a></li>
        <li><a href="links.htm" title="Creating links">Creating links</a></li>
        <li><a href="reference.htm" title="HTML Reference">HTML reference</a></li>
        <li><a href="next.htm" title="Next steps">Next steps</a></li>
      </ul>
    </nav>

    If you have links to other references and not navigating internally in the original site,
    then it doesn't need <nav>


IV. The article element
  <article> represents ac complete/self-contained composition in a document,
  page, application, or site. Like a magazine, newspaper, technical or scholarly article,
  essay, report, or blog/social media post.

  Think of articles that as individual elements that can stand alone.

V. The section element

  <section> represents a generic section of a document or application.
  A thematic grouping of content.
  (!) Each section should be identified typically by including a heading (h1-h6 element)
  as a child of the <section> element.

  Not a generic container, use div instead.

  (!!!) <section> element is appropriate only if the element's contents would be
        listed explicitly in the document's outline

VI. The aside element

  Designed for related content.

  The aside element represents a section of a page that consists of content that
  is tangentially related to the content of the parenting sectioning content, and
  which could be considered separate from that content. Such sections are often
  represented as sidebars in printed typography.

  The element can be used for typographical effects like pull quotes or sidebars,
  for advertising, for groups of nav elements, and for other content that is
  considered separate from the main content of the nearest ancestor sectioning
  content.

  Assistive Technology may convey the semantics of the aside to users. This
  information can provide a hint to users as to the type of content. For example
  the role of the element, which in this case is "complementary", can be announced
  by screen reader software when a user navigates to an aside element. User Agents
  may also provide methods to navigate to aside elements.

  Itâ€™s not appropriate to use the aside element just for parentheticals, since
  those are part of the main flow of the document.

<section>
  <h3>Document outlines </h3>
  <p>One of the fundamental concepts of HTML is that its documents can be represented by a document outline that summarizes the content of the page. Imagine a page being represented by a table of contents and you'll have a good idea of what one
    of these outlines might look like. These outlines assist in tasks such as quickly searching documents and making content easier to navigate for assistive devices. </p>
  <p>Prior to HTML5, document outlines were generated entirely through the use of headings. An H1 at the top of the page would serve to identify the page content, and subsequent headings would create sections and subsections inside of it. This
    meant that having a strategy for when to use certain headings was critical for maintaining consistent document structure. In HTML5 a new outline algorithm was introduced that added the new sectioning elements to the heading elements and
    created a more sophisticated outlining model. Although not currently implemented by user agents it is still recommended that authors familiarize themselves with it so that they're using the new sectioning and semantic tags properly. </p>
  <p>It is still considered to be a best practice to use heading tags to establish the document outline. Mozilla has a fantastic article on <a
      href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Sections_and_Outlines_of_an_HTML5_document" title="Mozilla Dev article on HTML sections">sections and outlines</a> in HTML documents that I strongly recommend reading.</p>
  <aside>
    <h4>W3C Warning</h4>
    <p>At the time of the authoring of this course, the W3C had posted this warning regarding the HTML5 outline algorithm:</p>
    <blockquote>There are currently no known implementations of the outline algorithm in graphical browsers or assistive technology user agents, although the algorithm is implemented in other software such as conformance checkers. Therefore the
      outline algorithm cannot be relied upon to convey document structure to users. Authors are advised to use heading rank (h1-h6) to convey document structure.</blockquote>
  </aside>
</section>

Placement is crucial. If its a side bar, make it on equal level to h3. If its outside
of article, it would be tangentially related to the entire article.


VII. The div element
    The div element has no special meaning at all. It represents its children. It
    can be used with the class, lang, and title attributes to mark up semantics
    common to a group of consecutive elements.

    (!) Authors are strongly encouraged to view the div element as an element of last
    resort, for when no other element is suitable. Use of more appropriate elements
    instead of the div element leads to better accessibility for readers and easier
    maintainability for authors.

  When you need to group without any semantic sectioning.
  A powerful option when structuring content. Group for styling purposes is a
  good example.


VIII. Other semantic elements

  <header> -> introductory content for nearest sectioning content.
           -> can be used multiple time where any section that warrants one.
           -> will not create a new section.

  <main>   -> Main content of the body of a document.
           -> screen reader, search engines, will identify the main content.
           -> can only be used once.
           -> unique.

  <footer> -> contains info about its section such as who wrote it, links, copyright data, and the like.
           -> wont be needed as often, but not always on the bottom.

IX. Using WAI-ARIA roles
  Creating accessible sites.

  Landmark Roles Attribute:

  - application, article, banner, etc.

  <header role="banner">
    <h1>HTML Essential Training</h1>
    <h2>Structuring Pages</h2>
    <nav role="navigation">
      <ul>
        <li><a href="intro.htm" title="Introduction to HTML">Introduction to HTML</a></li>
        <li><a href="syntax.htm" title="HTML syntax">HTML syntax</a></li>
        <li><a href="structure.htm" title="Structuring pages">Structuring pages</a></li>
        <li><a href="links.htm" title="Creating links">Creating links</a></li>
        <li><a href="reference.htm" title="HTML Reference">HTML reference</a></li>
        <li><a href="next.htm" title="Next steps">Next steps</a></li>
      </ul>
    </nav>
  </header>
  <main role="main"> -> Specs say just use element if they have the same name, but most screen readers don't know this yet, so stick with this for the time being.
  ...
  </main>


  This page is now more accessible, screen readers can now jump specifically to
  main content, skip navigation, jump to navigation, read article and more.

  references: W3C using WAI-ARIA in HTML


Challenge:


Quiz:

2. <head> is a sectioning element used once on a page
   <header> is a semantic element that can be used many times on a page.

3. When you structure HTML documents in a way that illustrates meaning of the content,
  you are using semantics.

4. Example of a section element: <h1>
   Example of a semantic element: <nav>

5. Best way to generate document outlines:
  A: heading tags.

6. <nav> element represents part of an HTML page that links to other pages, or to
  parts within the current page.

7. If an HTML section contains a complete, self-contained, independently
   distributable piece of content, you should make it an article element.

8. <section> element represents a thematic grouping of content.

9. Related content -- for instance a sidebar -- is typically represented by
  an aside element.

10. You should use the <div> element when you're structuring or grouping content
    that does not need a specific semantic meaning.
