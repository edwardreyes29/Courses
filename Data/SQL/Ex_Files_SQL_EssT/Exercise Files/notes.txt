$ Intro
    I. Course Overview
        * SQLite 3 
        * Every database system is different
        * Standards compliant
        * Widely deployedf
        * Single file, cross-platform

        * Most predate standard -> legacy code
        * Syntax may be different
        * Features may be missin
        * Non-standard features may be common practice

        * Standard SQL -> provides solid foundations


$ 1. Installation
    X - Cross platform
    A - Apache
    M - MariaDB
    P - PHP
    P - Perl

    (!) In a production environment, would never run something
    like XAMPP. You need to make sure that your development 
    workstation is behind a proper Firewall and that Firewall
    is blocking port 80 -> Web server port

    First SQL statement

    >>> SELECT * FROM Country ORDER BY Name;

$ 2. SQL Overview
    I. Overview

        Intro to basic elements of SQL
        * A statement is the unit of execution in SQL

        >>> SELECT * FROM Countries WHERE Continent = 'Europe'

        Retrieves Rows from the Countries table where the Continent column is equal
        to the value of a string literal, Europe.

        Terminated by a column, but not all the time

        [FROM] clause: specifies which table the select Statement will use.
        [WHERE] clause: specifies which rows will be selected.
            - requires an expression -> evaluates t oa value
            - (e.g Continent = 'Europe') which is a Logical expression

        Four Fundamental Functions of a Database are:
        1. Create
        2. Read
        3. Update
        4. Delete
        CRUD 

        (R) [SELECT] statement: Is how you get data from the database
            - Used for all queries. 
            - R -> Read in CRUD
            - Most Common Statement you will use

        (C) [INSERT] statement:  used to add a row to a table.
            - specify the table, columns, and the data that will fill in those columns
            - C -> Create in CRUD

            e.g.
            >>> INSERT INTO Customer (name, city, state)
            >>>     VALUES ('Jimi Hendrix', 'Rentron', 'WA')

            - Separated into two lines. Improving readability. Indentation to show that
                it is part of the statement above. Whitespace ignored
        (U) [UPDATE] statement: used to change data
            - U -> Update in CRUD

            e.g.
            >>> UPDATE Customer
            >>>     SET
            >>>         Address = '123 Music Avenue'
            >>>         Zip = '98056'
            >>>     WHERE id = 5;

            [WHERE] clause is used to select which rows are to be updated.
        
        (D) [DELETE] statement: used to remove rows from a table
            - D -> Delete in CRUD

    II. Database Organization

        SQL is the language for managing a relational database

        Relational database is organized in two-dimensional tables
            comprised of rows and columns.

        Table has rows and columns:
            - row like an individual record in a table. row <-> record
            - column is like a field. column <-> field

        * Each row in a table has a unique key.
            - may or may not correspond with a column in a table.
            - sometimes unique key is hidden, but the table MUST have one.

        * When column is used as the unique key, it is called Primary Key
            - Primary key means that a column is used as the unique key for this table

            e.g. ID column in a table is the unique key
    
        * Tables keys are used to create relationships between tables.
            - Foreign keys: refer to keys of other tables
            - make it possble to use 'joined queries'
                - to treat rows in several tables as joined units.

        


    III. The SELECT Statement

    IV. Selecting rows

    V. Selecting columns

    VI. Countring rows

    VII. Inserting data

    VIII. Updating data

    IX. Deleteing data






